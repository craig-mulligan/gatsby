{"version":3,"sources":["../../../src/internal-plugins/query-runner/gatsby-node.js"],"names":["fs","require","path","watchComponent","components","exports","onCreateComponent","component","store","boundActionCreators","writeJsonFile","jsonName","dest","join","getState","program","directory","existsSync","writeFile","componentPath","state","pagesAndLayouts","pages","layouts","filter","pl","map"],"mappings":";;;;;;;;AAAA,IAAMA,KAAKC,aAAX;AACA,IAAMC,OAAOD,eAAb;;eAC2BA,0B;IAAnBE,c,YAAAA,c;;AAER,IAAIC,aAAa,EAAjB;;AAEAC,QAAQC,iBAAR,GAA4B,gBAA+C;AAAA,MAA5CC,SAA4C,QAA5CA,SAA4C;AAAA,MAAjCC,KAAiC,QAAjCA,KAAiC;AAAA,MAA1BC,mBAA0B,QAA1BA,mBAA0B;;AACzE;AACA;AACA;AACA;AACA;AACA,MAAMC,gBAAgB,SAAhBA,aAAgB,QAAkB;AAAA,QAAfC,QAAe,SAAfA,QAAe;;AACtC;AACA,QAAMC,OAAOV,KAAKW,IAAL,CACXL,MAAMM,QAAN,GAAiBC,OAAjB,CAAyBC,SADd,oBAIXL,QAJW,CAAb;AAMA,QAAI,CAACX,GAAGiB,UAAH,CAAcL,IAAd,CAAL,EAA0B;AACxBZ,SAAGkB,SAAH,CAAaN,IAAb,QAAyB,YAAM,CAAE,CAAjC;AACD;AACF,GAXD;;AAaA,MAAI,CAACR,WAAWG,UAAUY,aAArB,CAAL,EAA0C;AACxC,QAAMC,QAAQZ,MAAMM,QAAN,EAAd;AACA,QAAMO,6DAAsBD,MAAME,KAA5B,oCAAsCF,MAAMG,OAA5C,EAAN;;AAEAF,oBACGG,MADH,CACU;AAAA,aAAMC,GAAGN,aAAH,KAAqBZ,UAAUY,aAArC;AAAA,KADV,EAEGO,GAFH,CAEOhB,aAFP;;AAIAP,mBAAeI,UAAUY,aAAzB;AACAf,eAAWG,UAAUY,aAArB,IAAsCZ,UAAUY,aAAhD;AACD;AACF,CA9BD","file":"gatsby-node.js","sourcesContent":["const fs = require(`fs`)\nconst path = require(`path`)\nconst { watchComponent } = require(`./query-watcher`)\n\nlet components = {}\n\nexports.onCreateComponent = ({ component, store, boundActionCreators }) => {\n  // if we haven't seen component before\n  // - get corresponding pages + layouts\n  // - ensure they have a json files\n  // - watch component\n  // - mark component\n  const writeJsonFile = ({ jsonName }) => {\n    // console.log(jsonName)\n    const dest = path.join(\n      store.getState().program.directory,\n      `.cache`,\n      `json`,\n      jsonName\n    )\n    if (!fs.existsSync(dest)) {\n      fs.writeFile(dest, `{}`, () => {})\n    }\n  }\n\n  if (!components[component.componentPath]) {\n    const state = store.getState()\n    const pagesAndLayouts = [...state.pages, ...state.layouts]\n\n    pagesAndLayouts\n      .filter(pl => pl.componentPath === component.componentPath)\n      .map(writeJsonFile)\n\n    watchComponent(component.componentPath)\n    components[component.componentPath] = component.componentPath\n  }\n}\n"]}