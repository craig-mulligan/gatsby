{"version":3,"sources":["../../../src/internal-plugins/query-runner/pages-writer.js"],"names":["_","require","glob","fs","store","emitter","getLayoutById","layouts","find","l","id","writePages","writtenOnce","getState","program","config","pages","pagesData","reduce","mem","path","matchPath","componentChunkName","layout","jsonName","layoutComponentChunkName","layoutJsonName","components","json","pageLayouts","forEach","push","p","component","defaultLayoutExists","uniq","uniqBy","c","writeFile","directory","syncRequires","map","join","j","asyncRequires","exports","oldPages","debouncedWritePages","debounce","isEqual","on"],"mappings":"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","file":"pages-writer.js","sourcesContent":["const _ = require(`lodash`)\nconst glob = require(`glob`)\nconst fs = require(`fs-extra`)\n\nconst { store, emitter } = require(`../../redux/`)\nimport { generatePathChunkName } from \"../../utils/js-chunk-names\"\n\nimport { joinPath } from \"../../utils/path\"\n\nconst getLayoutById = layouts => id => layouts.find(l => l.id === id)\n\n// Write out pages information.\nconst writePages = async () => {\n  writtenOnce = true\n  let { program, config, pages, layouts } = store.getState()\n  // Write out pages.json\n  const pagesData = pages.reduce(\n    (mem, { path, matchPath, componentChunkName, layout, jsonName }) => [\n      ...mem,\n      {\n        componentChunkName,\n        layout,\n        layoutComponentChunkName: getLayoutById(layouts)(layout)\n          .componentChunkName,\n        layoutJsonName: getLayoutById(layouts)(layout).jsonName,\n        jsonName,\n        path,\n        matchPath,\n      },\n    ],\n    []\n  )\n\n  // Get list of components, layouts, and json files.\n  let components = []\n  let json = []\n  let pageLayouts = []\n\n  pages.forEach(p => {\n    components.push({\n      componentChunkName: p.componentChunkName,\n      component: p.component,\n    })\n    if (p.layout) {\n      let layout = getLayoutById(layouts)(p.layout)\n      pageLayouts.push(layout)\n      json.push({\n        jsonName: layout.jsonName,\n      })\n    }\n    json.push({ path: p.path, jsonName: p.jsonName })\n  })\n\n  // Add the default layout if it exists.\n  let defaultLayoutExists = false\n  pageLayouts = _.uniq(pageLayouts)\n  components = _.uniqBy(components, c => c.componentChunkName)\n\n  await fs.writeFile(\n    joinPath(program.directory, `.cache/pages.json`),\n    JSON.stringify(pagesData, null, 4)\n  )\n\n  // Create file with sync requires of layouts/components/json files.\n  let syncRequires = `// prefer default export if available\nconst preferDefault = m => m && m.default || m\n\\n\\n`\n  syncRequires += `exports.components = {\\n${components\n    .map(\n      c =>\n        `  \"${c.componentChunkName}\": preferDefault(require(\"${joinPath(\n          c.component\n        )}\"))`\n    )\n    .join(`,\\n`)}\n}\\n\\n`\n  syncRequires += `exports.json = {\\n${json\n    .map(\n      j =>\n        `  \"${j.jsonName}\": require(\"${joinPath(\n          program.directory,\n          `/.cache/json/`,\n          j.jsonName\n        )}\")`\n    )\n    .join(`,\\n`)}\n}\\n\\n`\n  syncRequires += `exports.layouts = {\\n${pageLayouts\n    .map(l => `  \"${l.componentChunkName}\": preferDefault(require(\"${joinPath(\n        l.component\n      )}\"))`)\n    .join(`,\\n`)}\n}`\n\n  await fs.writeFile(\n    `${program.directory}/.cache/sync-requires.js`,\n    syncRequires\n  )\n  // Create file with async requires of layouts/components/json files.\n  let asyncRequires = `// prefer default export if available\nconst preferDefault = m => m && m.default || m\n\\n`\n  asyncRequires += `exports.components = {\\n${components\n    .map(\n      c =>\n        `  \"${c.componentChunkName}\": require(\"gatsby-module-loader?name=${c.componentChunkName}!${joinPath(\n          c.component\n        )}\")`\n    )\n    .join(`,\\n`)}\n}\\n\\n`\n  asyncRequires += `exports.json = {\\n${json\n    .map(\n      j =>\n        `  \"${j.jsonName}\": require(\"gatsby-module-loader?name=${generatePathChunkName(\n          j.path\n        )}!${joinPath(program.directory, `/.cache/json/`, j.jsonName)}\")`\n    )\n    .join(`,\\n`)}\n}\\n\\n`\n  asyncRequires += `exports.layouts = {\\n${pageLayouts\n    .map(l => `  \"${l.componentChunkName}\": require(\"gatsby-module-loader?name=${l.componentChunkName}!${joinPath(\n        l.component\n      )}\")`)\n    .join(`,\\n`)}\n}`\n\n  await fs.writeFile(\n    joinPath(program.directory, `.cache/async-requires.js`),\n    asyncRequires\n  )\n\n  return\n}\n\nexports.writePages = writePages\n\nlet writtenOnce = false\nlet oldPages\nconst debouncedWritePages = _.debounce(() => {\n  if (!writtenOnce || !_.isEqual(oldPages, store.getState().pages)) {\n    writePages()\n    oldPages = store.getState().pages\n  }\n}, 250)\n\nemitter.on(`CREATE_PAGE`, () => {\n  debouncedWritePages()\n})\nemitter.on(`DELETE_PAGE_BY_PATH`, () => {\n  debouncedWritePages()\n})\n"]}