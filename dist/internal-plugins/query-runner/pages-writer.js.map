{"version":3,"sources":["../../../src/internal-plugins/query-runner/pages-writer.js"],"names":["_","require","glob","fs","store","emitter","getLayoutById","layouts","find","l","id","writePages","writtenOnce","getState","program","config","pages","pagesData","reduce","mem","path","matchPath","componentChunkName","layout","jsonName","layoutOjb","layoutComponentChunkName","layoutJsonName","components","json","pageLayouts","forEach","push","p","component","defaultLayoutExists","uniq","uniqBy","c","writeFile","directory","syncRequires","map","join","j","asyncRequires","exports","oldPages","debouncedWritePages","debounce","isEqual","on"],"mappings":"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","file":"pages-writer.js","sourcesContent":["const _ = require(`lodash`)\nconst glob = require(`glob`)\nconst fs = require(`fs-extra`)\n\nconst { store, emitter } = require(`../../redux/`)\nimport { generatePathChunkName } from \"../../utils/js-chunk-names\"\n\nimport { joinPath } from \"../../utils/path\"\n\nconst getLayoutById = layouts => id => layouts.find(l => l.id === id)\n\n// Write out pages information.\nconst writePages = async () => {\n  writtenOnce = true\n  let { program, config, pages, layouts } = store.getState()\n  // Write out pages.json\n  const pagesData = pages.reduce(\n    (mem, { path, matchPath, componentChunkName, layout, jsonName }) => {\n      const layoutOjb = getLayoutById(layouts)(layout)\n      return [\n        ...mem,\n        {\n          componentChunkName,\n          layout,\n          layoutComponentChunkName: layoutOjb && layoutOjb.componentChunkName,\n          layoutJsonName: layoutOjb && layoutOjb.jsonName,\n          jsonName,\n          path,\n          matchPath,\n        },\n      ]\n    },\n    []\n  )\n\n  // Get list of components, layouts, and json files.\n  let components = []\n  let json = []\n  let pageLayouts = []\n\n  pages.forEach(p => {\n    components.push({\n      componentChunkName: p.componentChunkName,\n      component: p.component,\n    })\n    if (p.layout) {\n      let layout = getLayoutById(layouts)(p.layout)\n      pageLayouts.push(layout)\n      json.push({\n        jsonName: layout.jsonName,\n      })\n    }\n    json.push({ path: p.path, jsonName: p.jsonName })\n  })\n\n  // Add the default layout if it exists.\n  let defaultLayoutExists = false\n  pageLayouts = _.uniq(pageLayouts)\n  components = _.uniqBy(components, c => c.componentChunkName)\n\n  await fs.writeFile(\n    joinPath(program.directory, `.cache/pages.json`),\n    JSON.stringify(pagesData, null, 4)\n  )\n\n  // Create file with sync requires of layouts/components/json files.\n  let syncRequires = `// prefer default export if available\nconst preferDefault = m => m && m.default || m\n\\n\\n`\n  syncRequires += `exports.components = {\\n${components\n    .map(\n      c =>\n        `  \"${c.componentChunkName}\": preferDefault(require(\"${joinPath(\n          c.component\n        )}\"))`\n    )\n    .join(`,\\n`)}\n}\\n\\n`\n  syncRequires += `exports.json = {\\n${json\n    .map(\n      j =>\n        `  \"${j.jsonName}\": require(\"${joinPath(\n          program.directory,\n          `/.cache/json/`,\n          j.jsonName\n        )}\")`\n    )\n    .join(`,\\n`)}\n}\\n\\n`\n  syncRequires += `exports.layouts = {\\n${pageLayouts\n    .map(\n      l =>\n        `  \"${l.componentChunkName}\": preferDefault(require(\"${joinPath(\n          l.component\n        )}\"))`\n    )\n    .join(`,\\n`)}\n}`\n\n  await fs.writeFile(\n    `${program.directory}/.cache/sync-requires.js`,\n    syncRequires\n  )\n  // Create file with async requires of layouts/components/json files.\n  let asyncRequires = `// prefer default export if available\nconst preferDefault = m => m && m.default || m\n\\n`\n  asyncRequires += `exports.components = {\\n${components\n    .map(\n      c =>\n        `  \"${c.componentChunkName}\": require(\"gatsby-module-loader?name=${c.componentChunkName}!${joinPath(\n          c.component\n        )}\")`\n    )\n    .join(`,\\n`)}\n}\\n\\n`\n  asyncRequires += `exports.json = {\\n${json\n    .map(\n      j =>\n        `  \"${j.jsonName}\": require(\"gatsby-module-loader?name=${generatePathChunkName(\n          j.path\n        )}!${joinPath(program.directory, `/.cache/json/`, j.jsonName)}\")`\n    )\n    .join(`,\\n`)}\n}\\n\\n`\n  asyncRequires += `exports.layouts = {\\n${pageLayouts\n    .map(\n      l =>\n        `  \"${l.componentChunkName}\": require(\"gatsby-module-loader?name=${l.componentChunkName}!${joinPath(\n          l.component\n        )}\")`\n    )\n    .join(`,\\n`)}\n}`\n\n  await fs.writeFile(\n    joinPath(program.directory, `.cache/async-requires.js`),\n    asyncRequires\n  )\n\n  return\n}\n\nexports.writePages = writePages\n\nlet writtenOnce = false\nlet oldPages\nconst debouncedWritePages = _.debounce(() => {\n  if (!writtenOnce || !_.isEqual(oldPages, store.getState().pages)) {\n    writePages()\n    oldPages = store.getState().pages\n  }\n}, 250)\n\nemitter.on(`CREATE_PAGE`, () => {\n  debouncedWritePages()\n})\nemitter.on(`DELETE_PAGE_BY_PATH`, () => {\n  debouncedWritePages()\n})\n"]}