{"version":3,"sources":["../../src/cache-dir/static-entry.js"],"names":["Html","require","e","pathChunkName","name","path","getPage","find","page","defaultLayout","props","children","getLayout","layout","layouts","layoutComponentChunkName","$","createElement","module","exports","locals","callback","pathPrefix","__PREFIX_PATHS__","__PATH_PREFIX__","bodyHTML","headComponents","preBodyComponents","postBodyComponents","bodyProps","replaceBodyHTMLString","body","setHeadComponents","concat","components","setPreBodyComponents","setPostBodyComponents","setBodyProps","bodyComponent","location","pathname","context","render","json","layoutJsonName","componentChunkName","jsonName","chunkManifest","unshift","__html","stats","scripts","map","fetchKey","s","fetchedScript","prefixedScript","filter","forEach","script","scriptsString","join","push","html"],"mappings":"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","file":"static-entry.js","sourcesContent":["import React from \"react\"\nimport { renderToString, renderToStaticMarkup } from \"react-dom/server\"\nimport { StaticRouter, Route, withRouter } from \"react-router-dom\"\nimport { kebabCase, get, merge, isArray, isString } from \"lodash\"\nimport apiRunner from \"./api-runner-ssr\"\nimport pages from \"./pages.json\"\nimport syncRequires from \"./sync-requires\"\n\nlet Html\ntry {\n  Html = require(`../src/html`)\n} catch (e) {\n  Html = require(`./default-html`)\n}\n\nconst pathChunkName = path => {\n  const name = path === `/` ? `index` : kebabCase(path)\n  return `path---${name}`\n}\n\nconst getPage = path => pages.find(page => page.path === path)\nconst defaultLayout = props =>\n  <div>\n    {props.children()}\n  </div>\n\nconst getLayout = page => {\n  const layout = syncRequires.layouts[page.layoutComponentChunkName]\n  return layout ? layout : defaultLayout\n}\n\nconst $ = React.createElement\n\nmodule.exports = (locals, callback) => {\n  let pathPrefix = `/`\n  if (__PREFIX_PATHS__) {\n    pathPrefix = `${__PATH_PREFIX__}/`\n  }\n\n  let bodyHTML = ``\n  let headComponents = []\n  let preBodyComponents = []\n  let postBodyComponents = []\n  let bodyProps = {}\n\n  const replaceBodyHTMLString = body => {\n    bodyHTML = body\n  }\n\n  const setHeadComponents = components => {\n    headComponents = headComponents.concat(components)\n  }\n\n  const setPreBodyComponents = components => {\n    preBodyComponents = preBodyComponents.concat(components)\n  }\n\n  const setPostBodyComponents = components => {\n    postBodyComponents = postBodyComponents.concat(components)\n  }\n\n  const setBodyProps = props => {\n    bodyProps = merge({}, bodyProps, props)\n  }\n\n  const bodyComponent = $(\n    StaticRouter,\n    {\n      location: {\n        pathname: locals.path,\n      },\n      context: {},\n    },\n    $(Route, {\n      render: props => {\n        const page = getPage(props.location.pathname)\n        const layout = getLayout(page)\n        return $(withRouter(layout), {\n          ...props,\n          ...syncRequires.json[page.layoutJsonName],\n          children: props =>\n            $(syncRequires.components[page.componentChunkName], {\n              ...props,\n              ...syncRequires.json[page.jsonName],\n            }),\n        })\n      },\n    })\n  )\n\n  // Let the site or plugin render the page component.\n  apiRunner(`replaceRenderer`, {\n    bodyComponent,\n    replaceBodyHTMLString,\n    setHeadComponents,\n    setPreBodyComponents,\n    setPostBodyComponents,\n    setBodyProps,\n  })\n\n  // If no one stepped up, we'll handle it.\n  if (!bodyHTML) {\n    bodyHTML = renderToString(bodyComponent)\n  }\n\n  apiRunner(`onRenderBody`, {\n    setHeadComponents,\n    setPreBodyComponents,\n    setPostBodyComponents,\n    setBodyProps,\n    pathname: locals.path,\n  })\n\n  // Add the chunk-manifest as a head component.\n  const chunkManifest = require(`!raw!../public/chunk-manifest.json`)\n\n  headComponents.unshift(\n    <script\n      id=\"webpack-manifest\"\n      key=\"webpack-manifest\"\n      dangerouslySetInnerHTML={{\n        __html: `\n            //<![CDATA[\n            window.webpackManifest = ${chunkManifest}\n            //]]>\n            `,\n      }}\n    />\n  )\n\n  let stats\n  try {\n    stats = require(`../public/stats.json`)\n  } catch (e) {\n    // ignore\n  }\n\n  // Create paths to scripts\n  const page = pages.find(page => page.path === locals.path)\n  const scripts = [\n    `commons`,\n    `app`,\n    pathChunkName(locals.path),\n    page.componentChunkName,\n    page.layoutComponentChunkName,\n  ]\n    .map(s => {\n      const fetchKey = `assetsByChunkName[${s}]`\n\n      let fetchedScript = get(stats, fetchKey)\n\n      if (!fetchedScript) {\n        return null\n      }\n\n      // If sourcemaps are enabled, then the entry will be an array with\n      // the script name as the first entry.\n      fetchedScript = isArray(fetchedScript) ? fetchedScript[0] : fetchedScript\n      const prefixedScript = `${pathPrefix}${fetchedScript}`\n\n      // Make sure we found a component.\n      if (prefixedScript === `/`) {\n        return null\n      }\n\n      return prefixedScript\n    })\n    .filter(s => isString(s))\n\n  scripts.forEach(script => {\n    // Add preload <link>s for scripts.\n    headComponents.unshift(\n      <link rel=\"preload\" key={script} href={script} as=\"script\" />\n    )\n  })\n\n  // Add script loader for page scripts to the head.\n  // Taken from https://www.html5rocks.com/en/tutorials/speed/script-loading/\n  const scriptsString = scripts.map(s => `\"${s}\"`).join(`,`)\n  headComponents.push(\n    <script\n      key={`script-loader`}\n      dangerouslySetInnerHTML={{\n        __html: `\n  !function(e,t,r){function n(){for(;d[0]&&\"loaded\"==d[0][f];)c=d.shift(),c[o]=!i.parentNode.insertBefore(c,i)}for(var s,a,c,d=[],i=e.scripts[0],o=\"onreadystatechange\",f=\"readyState\";s=r.shift();)a=e.createElement(t),\"async\"in i?(a.async=!1,e.head.appendChild(a)):i[f]?(d.push(a),a[o]=n):e.write(\"<\"+t+' src=\"'+s+'\" defer></'+t+\">\"),a.src=s}(document,\"script\",[\n  ${scriptsString}\n])\n  `,\n      }}\n    />\n  )\n\n  const html = `<!DOCTYPE html>\\n ${renderToStaticMarkup(\n    <Html\n      {...bodyProps}\n      headComponents={headComponents}\n      preBodyComponents={preBodyComponents}\n      postBodyComponents={postBodyComponents}\n      body={bodyHTML}\n      path={locals.path}\n    />\n  )}`\n\n  callback(null, html)\n}\n"]}